{
  "kind": "component",
  "type": "Cassandra",
  "display_name": "Cassandra",
  "description": "Cassandra Vector Store with search capabilities",
  "documentation": "https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/cassandra",
  "icon": "Cassandra",
  "minimized": null,
  "tags": [],
  "inputs": [
    {
      "field_class": "MessageTextInput",
      "name": "database_ref",
      "display_name": "Contact Points / Astra Database ID",
      "info": "Contact points for the database (or Astra DB database ID)",
      "required": true
    },
    {
      "field_class": "MessageTextInput",
      "name": "username",
      "display_name": "Username",
      "info": "Username for the database (leave empty for Astra DB)."
    },
    {
      "field_class": "SecretStrInput",
      "name": "token",
      "display_name": "Password / Astra DB Token",
      "info": "User password for the database (or Astra DB token).",
      "required": true
    },
    {
      "field_class": "MessageTextInput",
      "name": "keyspace",
      "display_name": "Keyspace",
      "info": "Table Keyspace (or Astra DB namespace).",
      "required": true
    },
    {
      "field_class": "MessageTextInput",
      "name": "table_name",
      "display_name": "Table Name",
      "info": "The name of the table (or Astra DB collection) where vectors will be stored.",
      "required": true
    },
    {
      "field_class": "IntInput",
      "name": "ttl_seconds",
      "display_name": "TTL Seconds",
      "info": "Optional time-to-live for the added texts.",
      "advanced": true
    },
    {
      "field_class": "IntInput",
      "name": "batch_size",
      "display_name": "Batch Size",
      "info": "Optional number of data to process in a single batch.",
      "value": 16,
      "advanced": true,
      "default": 16
    },
    {
      "field_class": "DropdownInput",
      "name": "setup_mode",
      "display_name": "Setup Mode",
      "info": "Configuration mode for setting up the Cassandra table, with options like 'Sync', 'Async', or 'Off'.",
      "options": [
        "Sync",
        "Async",
        "Off"
      ],
      "value": "Sync",
      "advanced": true,
      "default": "Sync"
    },
    {
      "field_class": "DictInput",
      "name": "cluster_kwargs",
      "display_name": "Cluster arguments",
      "info": "Optional dictionary of additional keyword arguments for the Cassandra cluster.",
      "advanced": true,
      "list": true
    },
    {
      "field_class": "Starred"
    },
    {
      "field_class": "HandleInput",
      "name": "embedding",
      "display_name": "Embedding",
      "input_types": [
        "Embeddings"
      ]
    },
    {
      "field_class": "IntInput",
      "name": "number_of_results",
      "display_name": "Number of Results",
      "info": "Number of results to return.",
      "value": 4,
      "advanced": true,
      "default": 4
    },
    {
      "field_class": "DropdownInput",
      "name": "search_type",
      "display_name": "Search Type",
      "info": "Search type to use",
      "options": [
        "Similarity",
        "Similarity with score threshold",
        "MMR (Max Marginal Relevance)"
      ],
      "value": "Similarity",
      "advanced": true,
      "default": "Similarity"
    },
    {
      "field_class": "FloatInput",
      "name": "search_score_threshold",
      "display_name": "Search Score Threshold",
      "info": "Minimum similarity score threshold for search results. (when using 'Similarity with score threshold')",
      "value": 0,
      "advanced": true,
      "default": 0
    },
    {
      "field_class": "DictInput",
      "name": "search_filter",
      "display_name": "Search Metadata Filter",
      "info": "Optional dictionary of filters to apply to the search query.",
      "advanced": true,
      "list": true
    },
    {
      "field_class": "MessageTextInput",
      "name": "body_search",
      "display_name": "Search Body",
      "info": "Document textual search terms to apply to the search query.",
      "advanced": true
    },
    {
      "field_class": "BoolInput",
      "name": "enable_body_search",
      "display_name": "Enable Body Search",
      "info": "Flag to enable body search. This must be enabled BEFORE the table is created.",
      "value": false,
      "advanced": true,
      "default": false
    }
  ],
  "outputs": [],
  "template": [
    "database_ref",
    "username",
    "token",
    "keyspace",
    "table_name",
    "ttl_seconds",
    "batch_size",
    "setup_mode",
    "cluster_kwargs",
    "embedding",
    "number_of_results",
    "search_type",
    "search_score_threshold",
    "search_filter",
    "body_search",
    "enable_body_search"
  ],
  "examples": [
    {
      "op": "add_component",
      "type": "Cassandra"
    }
  ],
  "source": "src/backend/base/langflow/components/vectorstores/cassandra.py#L16"
}